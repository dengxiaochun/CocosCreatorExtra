{"version":3,"sources":["assets/Script/Main.ts","assets/Script/ScrollViewExtra.ts"],"names":["_a","cc","_decorator","ccclass","property","Main","_super","__extends","_this","apply","this","arguments","scenelist","prototype","getSceneName","search","scene","reg","test","exec","start","document","location","director","loadScene","__decorate","String","Component","exports","default","requireComponent","ScrollViewExtra","extraScrollChildIndex","extraScrollBar","nowOffsetY","selectChildren","selectChildIndex","newEventHandler","target","component","handler","e","EventHandler","addScrollChildIndex","node","off","Node","EventType","MOUSE_WHEEL","scroll","getComponent","ScrollView","scrollEvents","push","getScrollOffset","y","children","content","i","length","log","setSelectChildIndex","addScrollBarExtra","scrollnode","_bubblingListeners","_capturingListeners","undefined","scrollbar","verticalScrollBar","touching","handlenode","handle","getMoveInterval","parent","handlesize","getContentSize","parentSize","maxY","minY","height","on","TOUCH_START","stopPropagation","TOUCH_MOVE","getDelta","p","scrollToPercentVertical","scrolling","TOUCH_END","scrollToOffset","TOUCH_CANCEL","getScrollChildOffset","maxoffset","getMaxScrollOffset","offset","o","o2","Math","abs","idx","opacity","op","max","onScrollEvent","scrollType","SCROLL_ENDED","SCROLLING","scrollOffset","v2","x"],"mappings":"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","sourcesContent":["const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Main extends cc.Component {\r\n\r\n    @property(String)\r\n    scenelist:string[] = [];\r\n\r\n    getSceneName(search:string)\r\n    {\r\n        /** ?scene=ScrollView */\r\n        let scene = '';\r\n        const reg = /\\?scene=(\\w+)/\r\n        if (reg.test(search)) {\r\n            // cc.log(reg.exec(search))\r\n            scene = reg.exec(search)[1];\r\n        }\r\n        return scene;\r\n    }\r\n\r\n    start () {\r\n        const scene = this.getSceneName(document.location.search)\r\n        scene && cc.director.loadScene(scene);\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","const {ccclass,property,requireComponent} = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(cc.ScrollView)\r\nexport default class ScrollViewExtra extends cc.Component {\r\n\r\n    /** 是否增加子节点区间功能 */\r\n    @property\r\n    extraScrollChildIndex = true;\r\n\r\n    /** 是否增加Scrollbar滑动功能 */\r\n    @property\r\n    extraScrollBar = true;\r\n\r\n    nowOffsetY = 0;\r\n\r\n    selectChildren:cc.Node[] = [];\r\n\r\n    selectChildIndex = 0;\r\n\r\n    newEventHandler(target:cc.Node,component:string,handler:string) {\r\n        const e = new cc.Component.EventHandler();\r\n        e.target = target;\r\n        e.component = component;\r\n        e.handler = handler;\r\n        return e;\r\n    }\r\n\r\n    /** 增加scroll子节点区间功能 */\r\n    addScrollChildIndex() {\r\n        /** 禁用鼠标滚轮，滚轮在移动区间时ScrollEvent返回很怪异，没有SCROLL_ENDED事件回调 */\r\n        this.node.off(cc.Node.EventType.MOUSE_WHEEL);\r\n        const scroll = this.node.getComponent(cc.ScrollView);\r\n        /** scroll事件监听 */\r\n        scroll.scrollEvents.push(this.newEventHandler(this.node,'ScrollViewExtra','onScrollEvent'));\r\n\r\n        this.nowOffsetY = scroll.getScrollOffset().y;\r\n\r\n        /** 可选择区间子节点 */\r\n        const children = scroll.content.children;\r\n        for (let i = 1; i < children.length - 1; i++) {\r\n            this.selectChildren[i - 1] = children[i];\r\n        }\r\n\r\n        cc.log(this.selectChildren)\r\n\r\n        this.setSelectChildIndex(0)\r\n\r\n    }\r\n\r\n    /** 增加scrollbar滑动事件，让滑动方向跟浏览器一样 */\r\n    /** 改方法只增加了竖轴滑动事件，横轴事件同理 */\r\n    addScrollBarExtra() {\r\n        const scroll = this.node.getComponent(cc.ScrollView);\r\n        const scrollnode:any = this.node;\r\n\r\n        /** 手动禁用scroll节点捕获事件_capturingListeners */\r\n        scrollnode._bubblingListeners = scrollnode._capturingListeners;\r\n        scrollnode._capturingListeners = undefined;\r\n\r\n        const scrollbar = scroll.verticalScrollBar;\r\n        let touching = false;\r\n        const handlenode = scrollbar.handle.node;\r\n\r\n        function getMoveInterval(node:cc.Node,parent:cc.Node) {\r\n            const handlesize = node.getContentSize();\r\n            const parentSize = parent.getContentSize();\r\n            let maxY = 0,minY = 0;\r\n            if (parentSize.height > handlesize.height) {\r\n                maxY = parentSize.height / 2 - handlesize.height;\r\n                minY = - parentSize.height / 2;\r\n            } \r\n            // cc.log(\"getMoveInterval\",minY,maxY,handlesize.height)\r\n            return {minY,maxY};\r\n        }\r\n\r\n        handlenode.on(cc.Node.EventType.TOUCH_START,(e:cc.Event.EventTouch)=>{\r\n            touching = true;\r\n            e.stopPropagation();\r\n        })\r\n        handlenode.on(cc.Node.EventType.TOUCH_MOVE,(e:cc.Event.EventTouch)=>{\r\n            const node = e.target;\r\n            const {minY,maxY} = getMoveInterval(node,node.parent)\r\n            node.y += e.getDelta().y\r\n            if (node.y > maxY) {\r\n                node.y = maxY;\r\n            } else if (node.y < minY) {\r\n                node.y = minY;\r\n            }\r\n            e.stopPropagation();\r\n            let p = (node.y - minY) / (maxY - minY);\r\n            scroll.scrollToPercentVertical(p)\r\n            if (this.extraScrollChildIndex) {\r\n                this.scrolling(scroll)\r\n            }\r\n        })\r\n        handlenode.on(cc.Node.EventType.TOUCH_END,(e:cc.Event.EventTouch)=>{\r\n            touching = false;\r\n            e.stopPropagation();\r\n            if (this.extraScrollChildIndex) {\r\n                this.scrollToOffset(scroll)\r\n            }\r\n            \r\n        })\r\n        handlenode.on(cc.Node.EventType.TOUCH_CANCEL,(e:cc.Event.EventTouch)=>{\r\n            touching = false;\r\n            e.stopPropagation();\r\n            if (this.extraScrollChildIndex) {\r\n                this.scrollToOffset(scroll)\r\n            }\r\n        })\r\n    }\r\n\r\n    start () {\r\n        this.extraScrollChildIndex && this.addScrollChildIndex();\r\n        this.extraScrollBar && this.addScrollBarExtra();\r\n    }\r\n\r\n    getScrollChildOffset(scroll:cc.ScrollView) {\r\n        /** 每个子节点高度，用来计算区间 */\r\n        const height = 33;\r\n        const maxoffset = scroll.getMaxScrollOffset().y;\r\n        const offset = scroll.getScrollOffset().y;\r\n        if (offset < 0) {\r\n            return 0;\r\n        } else if (offset > maxoffset) {\r\n            return maxoffset;\r\n        }\r\n\r\n        let o = 0;\r\n        let o2 = height;\r\n        let i = 0;\r\n        while(true) {\r\n            if (Math.abs(o - offset) < Math.abs(o2 - offset)) {\r\n                this.selectChildIndex = i;\r\n                return o;\r\n            }\r\n            o += height;\r\n            o2 += height;\r\n            i ++;\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    setSelectChildIndex(idx:number) {\r\n        for (let i = 0; i < this.selectChildren.length; i++) {\r\n            this.selectChildren[i].opacity = idx === i ? 255 : 255 * 0.3;\r\n        }\r\n    }\r\n\r\n    scrolling(scroll:cc.ScrollView) {\r\n        /** 每个子节点高度，用来计算区间 */\r\n        const height = 33;\r\n        const maxoffset = scroll.getMaxScrollOffset().y;\r\n        const offset = scroll.getScrollOffset().y;\r\n        if (offset <= 0) {\r\n           return this.setSelectChildIndex(0)\r\n        } else if (offset >= maxoffset) {\r\n           return this.setSelectChildIndex(this.selectChildren.length - 1)\r\n        }\r\n\r\n        let o = 0;\r\n        let o2 = height;\r\n        let i = 0;\r\n        while(true) {\r\n            if (offset >= o && offset < o2) {\r\n                const op = (offset - o) / height;\r\n                this.selectChildren[i].opacity = Math.max(1-op,0.3) * 255;\r\n                this.selectChildren[i + 1].opacity = Math.max(op, 0.3) * 255;\r\n                return \r\n            }\r\n            o += height;\r\n            o2 += height;\r\n            i ++;\r\n\r\n            // if (i == 10) {\r\n            //     cc.error('iiiiii',i,offset,o,o2)\r\n            //     break;\r\n            // }\r\n        }\r\n    }\r\n\r\n    onScrollEvent(scroll:cc.ScrollView,scrollType:number) {\r\n        if (scrollType === cc.ScrollView.EventType.SCROLL_ENDED) {\r\n            this.scrollToOffset(scroll)\r\n        } else if (scrollType === cc.ScrollView.EventType.SCROLLING) {\r\n            this.scrolling(scroll);\r\n        }\r\n    }\r\n\r\n    scrollToOffset(scroll:cc.ScrollView) {\r\n        const offset = this.getScrollChildOffset(scroll)\r\n        const scrollOffset =  scroll.getScrollOffset();\r\n        if (Math.abs(this.nowOffsetY - scrollOffset.y) < 0.01) \r\n            return this.setSelectChildIndex(this.selectChildIndex);\r\n        this.nowOffsetY = offset;\r\n        scroll.scrollToOffset(cc.v2(scrollOffset.x,this.nowOffsetY),0.1);\r\n    }\r\n}\r\n"],"file":"project.dev.js"}